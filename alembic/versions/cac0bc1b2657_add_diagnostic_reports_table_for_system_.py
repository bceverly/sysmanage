"""Add diagnostic_reports table for system diagnostics

Revision ID: cac0bc1b2657
Revises: 94ceb33566ec
Create Date: 2025-09-09 13:50:49.288256

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cac0bc1b2657'
down_revision: Union[str, None] = '94ceb33566ec'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diagnostic_reports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('host_id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.String(length=36), nullable=False),
    sa.Column('requested_by', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), server_default='pending', nullable=False),
    sa.Column('requested_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('system_logs', sa.Text(), nullable=True),
    sa.Column('configuration_files', sa.Text(), nullable=True),
    sa.Column('network_info', sa.Text(), nullable=True),
    sa.Column('process_info', sa.Text(), nullable=True),
    sa.Column('disk_usage', sa.Text(), nullable=True),
    sa.Column('environment_variables', sa.Text(), nullable=True),
    sa.Column('agent_logs', sa.Text(), nullable=True),
    sa.Column('error_logs', sa.Text(), nullable=True),
    sa.Column('collection_size_bytes', sa.BigInteger(), nullable=True),
    sa.Column('files_collected', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['host.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diagnostic_reports_collection_id'), 'diagnostic_reports', ['collection_id'], unique=True)
    op.create_index(op.f('ix_diagnostic_reports_host_id'), 'diagnostic_reports', ['host_id'], unique=False)
    op.create_index(op.f('ix_diagnostic_reports_requested_at'), 'diagnostic_reports', ['requested_at'], unique=False)
    op.create_index(op.f('ix_diagnostic_reports_status'), 'diagnostic_reports', ['status'], unique=False)
    op.drop_index('idx_network_interfaces_host_id', table_name='network_interfaces')
    op.drop_index('idx_saved_scripts_active', table_name='saved_scripts')
    op.drop_index('idx_saved_scripts_name', table_name='saved_scripts')
    op.drop_index('idx_saved_scripts_platform', table_name='saved_scripts')
    op.create_index(op.f('ix_saved_scripts_is_active'), 'saved_scripts', ['is_active'], unique=False)
    op.create_index(op.f('ix_saved_scripts_name'), 'saved_scripts', ['name'], unique=False)
    op.create_index(op.f('ix_saved_scripts_platform'), 'saved_scripts', ['platform'], unique=False)
    op.drop_index('idx_script_exec_created', table_name='script_execution_log')
    op.drop_index('idx_script_exec_execution_id', table_name='script_execution_log')
    op.drop_index('idx_script_exec_host', table_name='script_execution_log')
    op.drop_index('idx_script_exec_status', table_name='script_execution_log')
    op.create_index(op.f('ix_script_execution_log_created_at'), 'script_execution_log', ['created_at'], unique=False)
    op.create_index(op.f('ix_script_execution_log_execution_id'), 'script_execution_log', ['execution_id'], unique=True)
    op.create_index(op.f('ix_script_execution_log_host_id'), 'script_execution_log', ['host_id'], unique=False)
    op.create_index(op.f('ix_script_execution_log_status'), 'script_execution_log', ['status'], unique=False)
    op.drop_index('idx_storage_devices_host_id', table_name='storage_devices')
    op.alter_column('user_accounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_accounts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index('ix_user_accounts_host_id', table_name='user_accounts')
    op.drop_index('ix_user_accounts_username', table_name='user_accounts')
    op.drop_index('ix_user_group_memberships_host_id', table_name='user_group_memberships')
    op.drop_index('ix_user_group_memberships_user_account_id', table_name='user_group_memberships')
    op.drop_index('ix_user_group_memberships_user_group_id', table_name='user_group_memberships')
    op.drop_constraint('unique_user_group_membership', 'user_group_memberships', type_='unique')
    op.alter_column('user_groups', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_groups', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index('ix_user_groups_group_name', table_name='user_groups')
    op.drop_index('ix_user_groups_host_id', table_name='user_groups')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_user_groups_host_id', 'user_groups', ['host_id'], unique=False)
    op.create_index('ix_user_groups_group_name', 'user_groups', ['group_name'], unique=False)
    op.alter_column('user_groups', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_groups', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_unique_constraint('unique_user_group_membership', 'user_group_memberships', ['user_account_id', 'user_group_id'])
    op.create_index('ix_user_group_memberships_user_group_id', 'user_group_memberships', ['user_group_id'], unique=False)
    op.create_index('ix_user_group_memberships_user_account_id', 'user_group_memberships', ['user_account_id'], unique=False)
    op.create_index('ix_user_group_memberships_host_id', 'user_group_memberships', ['host_id'], unique=False)
    op.create_index('ix_user_accounts_username', 'user_accounts', ['username'], unique=False)
    op.create_index('ix_user_accounts_host_id', 'user_accounts', ['host_id'], unique=False)
    op.alter_column('user_accounts', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_accounts', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index('idx_storage_devices_host_id', 'storage_devices', ['host_id'], unique=False)
    op.drop_index(op.f('ix_script_execution_log_status'), table_name='script_execution_log')
    op.drop_index(op.f('ix_script_execution_log_host_id'), table_name='script_execution_log')
    op.drop_index(op.f('ix_script_execution_log_execution_id'), table_name='script_execution_log')
    op.drop_index(op.f('ix_script_execution_log_created_at'), table_name='script_execution_log')
    op.create_index('idx_script_exec_status', 'script_execution_log', ['status'], unique=False)
    op.create_index('idx_script_exec_host', 'script_execution_log', ['host_id'], unique=False)
    op.create_index('idx_script_exec_execution_id', 'script_execution_log', ['execution_id'], unique=True)
    op.create_index('idx_script_exec_created', 'script_execution_log', ['created_at'], unique=False)
    op.drop_index(op.f('ix_saved_scripts_platform'), table_name='saved_scripts')
    op.drop_index(op.f('ix_saved_scripts_name'), table_name='saved_scripts')
    op.drop_index(op.f('ix_saved_scripts_is_active'), table_name='saved_scripts')
    op.create_index('idx_saved_scripts_platform', 'saved_scripts', ['platform'], unique=False)
    op.create_index('idx_saved_scripts_name', 'saved_scripts', ['name'], unique=False)
    op.create_index('idx_saved_scripts_active', 'saved_scripts', ['is_active'], unique=False)
    op.create_index('idx_network_interfaces_host_id', 'network_interfaces', ['host_id'], unique=False)
    op.drop_index(op.f('ix_diagnostic_reports_status'), table_name='diagnostic_reports')
    op.drop_index(op.f('ix_diagnostic_reports_requested_at'), table_name='diagnostic_reports')
    op.drop_index(op.f('ix_diagnostic_reports_host_id'), table_name='diagnostic_reports')
    op.drop_index(op.f('ix_diagnostic_reports_collection_id'), table_name='diagnostic_reports')
    op.drop_table('diagnostic_reports')
    # ### end Alembic commands ###
