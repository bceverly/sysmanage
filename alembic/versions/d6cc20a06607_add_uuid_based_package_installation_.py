"""add_uuid_based_package_installation_schema

Revision ID: d6cc20a06607
Revises: 38813b0fb5c7
Create Date: 2025-09-20 17:30:13.426040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd6cc20a06607'
down_revision: Union[str, None] = '38813b0fb5c7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table already exists (for test environments)
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    existing_tables = inspector.get_table_names()

    if 'installation_requests' not in existing_tables:
        op.create_table('installation_requests',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('host_id', sa.Integer(), nullable=False),
        sa.Column('requested_by', sa.String(length=100), nullable=False),
        sa.Column('requested_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('status', sa.String(length=20), server_default='pending', nullable=False),
        sa.Column('result_log', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(['host_id'], ['host.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_installation_requests_requested_at'), 'installation_requests', ['requested_at'], unique=False)
        op.create_index(op.f('ix_installation_requests_status'), 'installation_requests', ['status'], unique=False)

    if 'installation_packages' not in existing_tables:
        op.create_table('installation_packages',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('installation_request_id', sa.String(length=36), nullable=False),
        sa.Column('package_name', sa.String(length=255), nullable=False),
        sa.Column('package_manager', sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(['installation_request_id'], ['installation_requests.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_installation_packages_installation_request_id'), 'installation_packages', ['installation_request_id'], unique=False)

    # Skip ALTER COLUMN for SQLite (doesn't support it) - only needed for PostgreSQL
    if conn.dialect.name != 'sqlite':
        op.alter_column('available_packages', 'id',
                   existing_type=sa.BIGINT(),
                   type_=sa.Integer(),
                   existing_nullable=False,
                   autoincrement=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('available_packages', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_index(op.f('ix_installation_packages_installation_request_id'), table_name='installation_packages')
    op.drop_table('installation_packages')
    op.drop_index(op.f('ix_installation_requests_status'), table_name='installation_requests')
    op.drop_index(op.f('ix_installation_requests_requested_at'), table_name='installation_requests')
    op.drop_table('installation_requests')
    # ### end Alembic commands ###
