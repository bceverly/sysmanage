{
  "Agent WebSocket authentication failed from %s": "Agent WebSocket authentication failed from %s",
  "Agent WebSocket connection attempted without token from %s": "Agent WebSocket connection attempted without token from %s",
  "antivirus": {
    "description": "Configure default antivirus software for each operating system",
    "errors": {
      "loadFailed": "Failed to load antivirus defaults",
      "permissionDenied": "You do not have permission to manage antivirus defaults",
      "saveFailed": "Failed to save antivirus defaults"
    },
    "none": "None",
    "permissionWarning": "You do not have permission to modify antivirus defaults. Contact your administrator to gain the MANAGE_ANTIVIRUS_DEFAULTS role.",
    "save": "Save",
    "saveSuccess": "Antivirus defaults saved successfully",
    "selectProgram": "Select Antivirus Program",
    "title": "Antivirus"
  },
  "availablePackages": {
    "addPackage": "Add Package",
    "added": "Added",
    "confirmUninstallMessage": "Are you sure you want to uninstall this package? This action will remove the package from the system.",
    "confirmUninstallPackage": "Uninstall Package",
    "description": "Description",
    "filterByManager": "Package Manager",
    "filterByOS": "Operating System / Version",
    "install": "Install",
    "installPackagesTitle": "Install Packages",
    "installSelectedPackages": "Install Selected Packages",
    "manager": "Manager",
    "noData": "No package data available. Packages will be collected from your managed hosts automatically.",
    "noPackagesFound": "No packages found matching your search",
    "noPackagesSelected": "No packages selected for installation",
    "noResults": "No packages found matching your search criteria.",
    "operation": "Operation",
    "package": "Package",
    "packageName": "Package Name",
    "packageUninstallError": "Error queueing package uninstallation",
    "packageUninstallQueued": "Package uninstallation has been queued",
    "packagesInstallError": "Error queueing package installation",
    "packagesInstallQueued": "Package installation has been queued",
    "packagesToInstall": "Packages to install",
    "refresh": "Refresh",
    "refreshAll": "Refresh All",
    "refreshPackages": "Refresh packages from agents",
    "results": "Search Results",
    "search": "Search Packages",
    "searchMinChars": "Enter at least 2 characters to search",
    "searchPackages": "Search for packages",
    "searchPackagesPlaceholder": "Enter package name to search...",
    "searchResults": "Search Results",
    "searchTerm": "Package name",
    "selectedPackages": "Selected Packages",
    "softwareInstallationHistory": "Software Installation History",
    "softwareInstallsComingSoon": "Software installation tracking coming soon. This feature will show the history and status of package installations requested through the software manager.",
    "summary": "Package Summary by OS",
    "title": "Available Packages",
    "totalPackages": "Total Packages",
    "uninstall": "Uninstall",
    "version": "Version"
  },
  "common": {
    "actions": "Actions",
    "active": "Active",
    "add": "Add",
    "back": "Back",
    "cancel": "Cancel",
    "close": "Close",
    "confirmAction": "Confirm Action",
    "delete": "Delete",
    "disabled": "Disabled",
    "edit": "Edit",
    "enabled": "Enabled",
    "error": "An error occurred",
    "firstPage": "First page",
    "goToPage": "Go to page",
    "inactive": "Inactive",
    "invalidDate": "Invalid date",
    "lastPage": "Last page",
    "less": "less",
    "loading": "Loading...",
    "nextPage": "Next page",
    "no": "No",
    "noDescription": "No description",
    "notAvailable": "N/A",
    "of": "of",
    "page": "Page",
    "previousPage": "Previous page",
    "refresh": "Refresh",
    "rowSelected": "row selected",
    "rowsPerPage": "Rows per page",
    "rowsSelected": "rows selected",
    "running": "Running",
    "save": "Save",
    "search": "Search",
    "selected": "Selected",
    "status": "Status",
    "stopped": "Stopped",
    "success": "Operation completed successfully",
    "unassigned": "Unassigned",
    "view": "View",
    "yes": "Yes"
  },
  "connectionStatus": {
    "connected": "Connected",
    "connectedTooltip": "Connected to server",
    "disconnected": "Disconnected",
    "disconnectedTooltip": "Connection lost, retrying...",
    "offline": "Offline",
    "offlineTooltip": "Unable to connect to server",
    "retrying": "Retrying",
    "retryingTooltip": "Attempting to reconnect to server"
  },
  "dashboard": {
    "antivirusCoverage": "Antivirus",
    "hosts": "Hosts",
    "openTelemetryCoverage": "OpenTelemetry",
    "rebootRequired": "Reboot Needed",
    "security": "Security",
    "settings": {
      "checkAll": "Check All",
      "checkNone": "Check None",
      "description": "Select which cards to display on your dashboard",
      "title": "Dashboard Settings"
    },
    "systemHealth": "System Health",
    "title": "Dashboard",
    "totalUsers": "Total Users",
    "updates": "Updates",
    "welcome": "Welcome to SysManage"
  },
  "dataGrid": {
    "columnVisibility": "Column Visibility",
    "hideAll": "Hide All",
    "reset": "Reset",
    "showAll": "Show All"
  },
  "forgotPassword": {
    "checkEmail": "If an account with that email exists, a password reset link has been sent. Please check your email and follow the instructions to reset your password.",
    "description": "Enter your email address and we'll send you a link to reset your password.",
    "didntReceive": "Didn't receive an email? Check your spam folder or try again.",
    "emailLabel": "Email Address",
    "emailRequired": "Email is required",
    "emailSent": "Email Sent",
    "error": "An error occurred while processing your request",
    "sendReset": "Send Reset Link",
    "sending": "Sending...",
    "title": "Forgot Password"
  },
  "grafana": {
    "apiKey": {
      "help": "Optional API key with Editor role permissions for enhanced features and version detection",
      "label": "API Key (Optional)"
    },
    "checkHealth": "Check Health",
    "enabled": {
      "label": "Enable Grafana Integration"
    },
    "healthError": {
      "label": "Health Check Error"
    },
    "manualUrl": {
      "help": "Enter the full URL to your Grafana instance",
      "label": "Grafana URL"
    },
    "noServers": "No Grafana servers found",
    "selectServer": {
      "label": "Select Grafana Server"
    },
    "serverUrl": {
      "label": "URL"
    },
    "status": {
      "checking": "Checking...",
      "disabled": "Disabled",
      "healthy": "Healthy",
      "label": "Status",
      "unhealthy": "Unhealthy",
      "unknown": "Unknown"
    },
    "title": "Grafana Integration",
    "useManagedServer": {
      "label": "Use Managed Server"
    }
  },
  "hostDetail": {
    "accessTab": "Access",
    "accountName": "Account Name",
    "actions": "Actions",
    "active": "Active",
    "activeInterfaces": "Active",
    "addPackage": "Add Package",
    "addSSHKey": "Add SSH Key",
    "addSSHKeyToUser": "Add SSH Key to {user}",
    "added": "Added",
    "additionalHardware": "Additional Hardware Details",
    "additionalOSDetails": "Additional OS Details",
    "agentLogs": "Agent Logs",
    "allGroups": "All",
    "allInterfaces": "All",
    "allUsers": "All",
    "allVolumes": "All",
    "antivirusDeployFailed": "Failed to deploy antivirus",
    "antivirusDeploySuccess": "Antivirus deployment initiated successfully",
    "approvalStatus": "Approval Status",
    "architecture": "Architecture",
    "attached": "Attached",
    "basicInfo": "Basic Information",
    "capacity": "Capacity",
    "certificateCollectionError": "Error requesting certificate collection",
    "certificateCollectionRequested": "Certificate collection requested",
    "certificateInfo": "Certificate Information",
    "certificateIssued": "Certificate Issued",
    "certificateName": "Certificate Name",
    "certificateSerial": "Certificate Serial",
    "certificates": "SSL Certificates",
    "certificatesTab": "Certificates",
    "clickRequestData": "Click \"Request Host Data\" to collect diagnostic information from the agent.",
    "collectCertificates": "Collect",
    "collectRoles": "Collect",
    "collectedAt": "Collected",
    "collectionId": "Collection ID",
    "collectionSize": "Collection Size",
    "collectionStatus": "Status",
    "completedAt": "Completed At",
    "configurationFiles": "Configuration Files",
    "confirmDeleteInstallation": "Are you sure you want to delete this installation record?",
    "confirmUninstallMessage": "Are you sure you want to uninstall this package? This action will remove the package from the system.",
    "confirmUninstallPackage": "Uninstall Package",
    "contractName": "Contract Name",
    "cpuCores": "Cores",
    "cpuFrequency": "Frequency",
    "cpuInfo": "CPU",
    "cpuModel": "CPU Model",
    "cpuThreads": "Threads",
    "cpuVendor": "CPU Vendor",
    "daysUntilExpiry": "{{days}} days",
    "deleteDiagnosticConfirm": "Delete Diagnostic Report",
    "deleteDiagnosticMessage": "Are you sure you want to delete this diagnostic report? This action cannot be undone.",
    "deleteInstallation": "Delete Installation Record",
    "deployAntivirus": "Deploy Antivirus",
    "deployOpenTelemetry": "Deploy OpenTelemetry",
    "detected": "Detected",
    "deviceType": "Device Type",
    "diagnosticDeleteFailed": "Failed to delete diagnostic report",
    "diagnosticDeleted": "Diagnostic report deleted successfully",
    "diagnosticDetailTitle": "Diagnostic Report Details",
    "diagnosticLoadFailed": "Failed to load diagnostic details",
    "diagnosticReport": "Diagnostic Report",
    "diagnosticsData": "Diagnostics Data",
    "diagnosticsTab": "Diagnostics",
    "diskUsage": "Disk Usage",
    "entitled": "Entitled",
    "environmentVariables": "Environment Variables",
    "errorLogs": "Error Logs",
    "expired": "Expired",
    "expires": "Expires",
    "expiryDate": "Expiry Date",
    "failedToLoadSSHKeys": "Failed to load SSH keys",
    "filesCollected": "Files Collected",
    "filesystem": "Filesystem",
    "groupMembers": "Members",
    "hardwareInfo": "Hardware Information",
    "hardwareTab": "Hardware",
    "hardwareUpdated": "Hardware Info Updated",
    "hasCertificate": "Has Client Certificate",
    "homeDir": "Home",
    "hostId": "Host ID",
    "inactiveInterfaces": "Inactive",
    "infoTab": "Info",
    "install": "Install",
    "installPackagesTitle": "Install Packages",
    "installSelectedPackages": "Install Selected Packages",
    "installationDeleteError": "Failed to delete installation record",
    "installationDeleted": "Installation record deleted successfully",
    "installed": "Installed",
    "interfaceType": "Interface Type",
    "invalidId": "Invalid host ID",
    "ipv4Address": "IPv4 Address",
    "ipv6Address": "IPv6 Address",
    "issuer": "Issuer",
    "lastRequested": "Last requested",
    "loadError": "Failed to load host details",
    "loadingSoftware": "Loading software packages...",
    "location": "Location",
    "logicalVolumes": "Logical",
    "macAddress": "MAC Address",
    "memberOfGroups": "Groups",
    "memoryInfo": "Memory",
    "mountPoint": "Mount Point",
    "networkDetails": "Network Interfaces",
    "networkInfo": "Network Information",
    "networkInterfaceDetails": "Network Interface Details",
    "noCertificates": "No certificates found",
    "noCertificatesHint": "Click \"Collect\" to scan for SSL certificates on this host",
    "noDataAvailable": "No data available",
    "noDiagnosticsData": "No diagnostics data available for this host.",
    "noGroupsFound": "No user groups found",
    "noPackagesFound": "No packages found matching your search",
    "noPackagesSelected": "No packages selected for installation",
    "noRolesDetected": "No server roles detected",
    "noSSHKeysAvailable": "No SSH keys available. Create SSH keys in the Secrets section first.",
    "noServices": "No services available",
    "noServicesSelected": "No services selected for control",
    "noSoftwareFound": "No software packages found",
    "noUsersFound": "No user accounts found",
    "notFound": "Host not found",
    "opentelemetryConnect": "Connect to Grafana",
    "opentelemetryConnectSuccess": "OpenTelemetry connected to Grafana successfully",
    "opentelemetryDeployFailed": "Failed to deploy OpenTelemetry",
    "opentelemetryDeploySuccess": "OpenTelemetry deployment queued successfully",
    "opentelemetryDeployed": "Deployed",
    "opentelemetryDisconnect": "Disconnect from Grafana",
    "opentelemetryDisconnectSuccess": "OpenTelemetry disconnected from Grafana successfully",
    "opentelemetryGrafanaServer": "Grafana Server",
    "opentelemetryNotConnected": "Not Connected",
    "opentelemetryNotDeployed": "Not Deployed",
    "opentelemetryOperationFailed": "OpenTelemetry operation failed",
    "opentelemetryRemove": "Remove OpenTelemetry",
    "opentelemetryRemoveSuccess": "OpenTelemetry removal queued successfully",
    "opentelemetryRestart": "Restart",
    "opentelemetryRestartSuccess": "OpenTelemetry service restarted successfully",
    "opentelemetryServiceRunning": "Running",
    "opentelemetryServiceStatus": "Service Status",
    "opentelemetryServiceStopped": "Stopped",
    "opentelemetryServiceUnknown": "Unknown",
    "opentelemetryStart": "Start",
    "opentelemetryStartSuccess": "OpenTelemetry service started successfully",
    "opentelemetryStatus": "OpenTelemetry Status",
    "opentelemetryStop": "Stop",
    "opentelemetryStopSuccess": "OpenTelemetry service stopped successfully",
    "operation": "Operation",
    "osDetails": "Additional OS Details",
    "osInfo": "Operating System",
    "osVersionUpdated": "OS Info Updated",
    "package": "Package",
    "packageNames": "Package Names",
    "packageUninstallError": "Error queueing package uninstallation",
    "packageUninstallQueued": "Package uninstallation has been queued",
    "packagesInstallError": "Error queueing package installation",
    "packagesInstallQueued": "Package installation has been queued",
    "packagesToInstall": "Packages to install",
    "physicalVolumes": "Physical",
    "platform": "Platform",
    "platformRelease": "Platform Release",
    "platformVersion": "Platform Version",
    "privilegedModeRequired": "Privileged mode required for service control",
    "processInfo": "Process Information",
    "processList": "Process List",
    "processingDiagnostics": "Processing...",
    "processor": "Processor",
    "regularGroup": "Regular",
    "regularGroups": "Regular",
    "regularUser": "Regular",
    "regularUsers": "Regular",
    "requestHostData": "Request Host Data",
    "requestedAt": "Requested At",
    "requestedBy": "Requested By",
    "requestingDiagnostics": "Requesting...",
    "restart": "Restart",
    "role": "Role",
    "roleCollectionError": "Error requesting role collection",
    "roleCollectionRequested": "Role collection requested",
    "running": "Running",
    "searchMinChars": "Enter at least 2 characters to search",
    "searchPackages": "Search for packages",
    "searchPackagesPlaceholder": "Enter package name to search...",
    "searchResults": "Search Results",
    "searchSSHKeys": "Search SSH keys by name or filename...",
    "searchSoftware": "Search by package name or description...",
    "securityTab": "Security",
    "selectSSHKeysToAdd": "Select the SSH keys you want to add to this user:",
    "selectedPackages": "Selected Packages",
    "selectedServices": "service(s) selected",
    "serialNumber": "Serial Number",
    "serverRoles": "Server Roles",
    "serverRolesTab": "Server Roles",
    "service": "Service",
    "serviceControlActions": "Service Control Actions",
    "serviceRestartError": "Error restarting services",
    "serviceRestartSuccess": "Service restart requested successfully",
    "serviceStartError": "Error starting services",
    "serviceStartSuccess": "Service start requested successfully",
    "serviceStopError": "Error stopping services",
    "serviceStopSuccess": "Service stop requested successfully",
    "services": "Services",
    "shell": "Shell",
    "showingPackages": "Showing {{start}}-{{end}} of {{total}} packages",
    "softwareChangesTab": "Software Changes",
    "softwareInstallationHistory": "Software Installation History",
    "softwareInstallsComingSoon": "Software installation tracking coming soon. This feature will show the history and status of package installations requested through the software manager.",
    "softwareTab": "Software",
    "speed": "Speed",
    "sshKeysDeployedError": "Failed to deploy SSH keys",
    "sshKeysDeployedSuccess": "SSH keys deployed successfully",
    "start": "Start",
    "status": "Status",
    "stop": "Stop",
    "stopped": "Stopped",
    "storageDetails": "Storage Details",
    "storageDeviceDetails": "Storage Device Details",
    "subscriptionStatus": "Subscription Status",
    "systemGroup": "System",
    "systemGroups": "System",
    "systemInformation": "System Information",
    "systemLogs": "System Logs",
    "systemUser": "System",
    "systemUsers": "System",
    "techSupportLevel": "Tech Support Level",
    "thirdPartyReposTab": "Third-Party Repositories",
    "totalMemory": "Total Memory",
    "ubuntuProAttach": "Attach",
    "ubuntuProAttachConfirm": "Attach",
    "ubuntuProAttachDescription": "Enter your Ubuntu Pro token to attach this system to your subscription.",
    "ubuntuProAttachError": "Failed to attach Ubuntu Pro",
    "ubuntuProAttachSuccess": "Ubuntu Pro attached successfully",
    "ubuntuProAttachTitle": "Attach Ubuntu Pro",
    "ubuntuProAttaching": "Attaching...",
    "ubuntuProDetach": "Detach",
    "ubuntuProDetachConfirm": "Detach",
    "ubuntuProDetachConfirmMessage": "Are you sure you want to detach Ubuntu Pro from this system? This will remove all Ubuntu Pro benefits and services for this host.",
    "ubuntuProDetachConfirmTitle": "Confirm Ubuntu Pro Detach",
    "ubuntuProDetachError": "Failed to detach Ubuntu Pro",
    "ubuntuProDetachSuccess": "Ubuntu Pro detached successfully",
    "ubuntuProDetaching": "Detaching...",
    "ubuntuProInfo": "Ubuntu Pro Information",
    "ubuntuProMasterTokenPreFilled": "Master Ubuntu Pro token has been pre-filled from settings.",
    "ubuntuProTab": "Ubuntu Pro",
    "ubuntuProToken": "Ubuntu Pro Token",
    "uninstall": "Uninstall",
    "userAccounts": "User Accounts",
    "userGroups": "User Groups",
    "version": "Version",
    "viewInstallationLog": "View Installation Log"
  },
  "hosts": {
    "actions": "Actions",
    "active": "Active",
    "addHost": "Add Host",
    "antivirusDeployFailed": "Failed to deploy antivirus. Please try again.",
    "antivirusDeploySuccess": "Antivirus deployment queued for {{count}} host(s)",
    "approvalNeeded": "Approval Needed",
    "approveSelected": "Approve Selected",
    "autoRefresh": "Auto-refresh",
    "confirmReboot": "Confirm System Reboot",
    "confirmRebootMessage": "Are you sure you want to reboot {{hostname}}? The system will be unavailable for a few minutes.",
    "confirmShutdown": "Confirm System Shutdown",
    "confirmShutdownMessage": "Are you sure you want to shutdown {{hostname}}? The system will need to be manually restarted.",
    "dataLastUpdated": "Data Last Updated",
    "daysAgo": "{{days}}d ago",
    "delete": "Delete",
    "deployAntivirus": "Deploy Antivirus",
    "deployOpenTelemetry": "Deploy OpenTelemetry",
    "down": "Down",
    "edit": "Edit",
    "filterByTags": "Filter by Tags",
    "fqdn": "FQDN",
    "getDiagnostics": "Get Diagnostics",
    "hardwareUpdated": "Hardware Updated",
    "hoursAgo": "{{hours}}h ago",
    "inactive": "Inactive",
    "invalidDate": "Invalid date",
    "ipv4": "IPv4 Address",
    "ipv6": "IPv6 Address",
    "justNow": "just now",
    "lastCheckin": "Last Checkin",
    "lastSeen": "Last seen {{minutes}} minutes ago",
    "minutesAgo": "{{minutes}}m ago",
    "never": "never",
    "noEligibleHostsForAntivirus": "No eligible hosts selected. Hosts must be active and in privileged mode for antivirus deployment.",
    "noEligibleHostsForOpenTelemetry": "No eligible hosts selected for OpenTelemetry deployment",
    "noResults": "No results found",
    "noRows": "No rows",
    "opentelemetryDeployFailed": "Failed to deploy OpenTelemetry. Please try again.",
    "opentelemetryDeploySuccess": "OpenTelemetry deployment queued for {{count}} host(s)",
    "osUpdated": "OS Updated",
    "osUpgrade": "OS Upgrade",
    "osUpgradeAvailable": "OS upgrade available for this host",
    "platform": "Platform",
    "privileged": "Privileged",
    "reboot": "Reboot",
    "rebootFailed": "Failed to request reboot",
    "rebootRequested": "Reboot requested successfully",
    "rebootRequired": "Reboot Needed",
    "rebootSelected": "Reboot Selected",
    "refreshAllData": "Request Host Data",
    "refreshHosts": "Refresh Hosts",
    "refreshNow": "Refresh Now",
    "refreshing": "Refreshing...",
    "runningPrivileged": "Agent is running with elevated privileges",
    "runningUnprivileged": "Agent is running without elevated privileges",
    "scriptsDisabledTooltip": "Script execution is disabled on this host",
    "scriptsEnabled": "Scripts Enabled",
    "scriptsEnabledTooltip": "Script execution is enabled on this host",
    "secondsAgo": "{{seconds}}s ago",
    "securityAndSystemUpdates": "{{security}} security, {{system}} system updates",
    "securityUpdatesOnly": "{{count}} security updates",
    "selectTags": "Select tags",
    "shutdown": "Shutdown",
    "shutdownFailed": "Failed to request shutdown",
    "shutdownRequested": "Shutdown requested successfully",
    "shutdownSelected": "Shutdown Selected",
    "softwareUpdated": "Software Updated",
    "status": "Status",
    "swUpdates": "SW Updates",
    "systemUpdatesOnly": "{{count}} system updates",
    "title": "Host Management",
    "up": "Up",
    "updated": "Updated",
    "userAccessUpdated": "Users/Groups Updated"
  },
  "login": {
    "error": "Invalid username or password",
    "forgotPassword": "Forgot password?",
    "password": "Password",
    "remember": "Remember me",
    "signUp": "Don't have an account? Sign Up",
    "submit": "Login",
    "title": "Login to SysManage",
    "username": "Email Address"
  },
  "logout": {
    "loading": "Logging out..."
  },
  "nav": {
    "dashboard": "Dashboard",
    "hosts": "Hosts",
    "logout": "Logout",
    "osUpgrades": "OS Upgrades",
    "reports": "Reports",
    "scripts": "Scripts",
    "secrets": "Secrets",
    "settings": "Settings",
    "updates": "Updates",
    "users": "Users"
  },
  "notifications": {
    "applicationUpdates": "Application Updates",
    "bell": {
      "tooltip": "View available updates"
    },
    "hostsAffected": "{{count}} of {{total}} hosts have updates",
    "loading": "Loading updates...",
    "noUpdates": "All systems are up to date",
    "osUpgrades": "OS Upgrades",
    "securityUpdates": "Security Updates",
    "systemUpdates": "System Updates",
    "title": "Available Updates/Upgrades",
    "totalUpdates": "Total Updates",
    "viewAll": "View All Updates",
    "viewSecurity": "View Security Updates"
  },
  "openbao": {
    "devModeChip": "Dev",
    "development": "Development",
    "operationalMode": "Operational Mode",
    "production": "Production",
    "seal": "Seal",
    "sealError": "Failed to seal OpenBAO",
    "sealStatus": "Seal Status",
    "sealed": "Sealed",
    "sealing": "Sealing...",
    "unseal": "Unseal",
    "unsealError": "Failed to unseal OpenBAO",
    "unsealed": "Unsealed",
    "unsealing": "Unsealing..."
  },
  "osUpgrades": {
    "executeSelected": "Execute Selected OS Upgrades",
    "filters": {
      "allTypes": "All OS Types",
      "fedora": "Fedora",
      "freebsd": "FreeBSD",
      "macos": "macOS",
      "netbsd": "NetBSD",
      "openbsd": "OpenBSD",
      "opensuse": "openSUSE",
      "ubuntu": "Ubuntu/Debian",
      "windows": "Windows"
    },
    "loading": "Loading OS upgrades...",
    "noMatchingUpgrades": "No OS upgrades match the current filter",
    "noUpgrades": "No OS upgrades are currently available",
    "refresh": "Refresh",
    "requiresReboot": "OS upgrade requires system reboot",
    "selectAll": "Select All",
    "stats": {
      "hosts": "Affected Hosts",
      "security": "Security Updates",
      "total": "Total OS Upgrades"
    },
    "status": {
      "failed": "Upgrade Failed",
      "pending": "Upgrade Requested",
      "success": "Successfully Upgraded"
    },
    "title": "Operating System Upgrades",
    "types": {
      "fedora": "Fedora Version Upgrade",
      "freebsd": "FreeBSD Version Upgrade",
      "generic": "OS Upgrade",
      "macos": "macOS Version Upgrade",
      "netbsd": "NetBSD System Upgrade",
      "openbsd": "OpenBSD System Upgrade",
      "opensuse": "openSUSE Distribution Upgrade",
      "ubuntu": "Ubuntu Release Upgrade",
      "windows": "Windows Feature Update"
    }
  },
  "queues": {
    "created": "Created At",
    "description": "View and manage expired/failed messages from the message queue.",
    "direction": "Direction",
    "expired": "Expired At",
    "hostId": "Host ID",
    "messageContent": "Message Content",
    "messageDetails": "Message Details",
    "messageId": "Message ID",
    "messageType": "Message Type",
    "placeholder": "Queue management interface will be implemented here.",
    "priority": "Priority",
    "title": "Queue Management",
    "viewDetails": "View Details"
  },
  "reports": {
    "action": "Action",
    "auditLog": "Audit Log",
    "auditLogDescription": "Complete audit trail of all system activities, user actions, and changes. Shows who did what, when they did it, and the outcome.",
    "backToReports": "Back to Reports",
    "description": "Description",
    "entityName": "Entity Name",
    "entityType": "Entity Type",
    "generatePdf": "Generate PDF",
    "generatingPdf": "Generating PDF...",
    "hostsWithTagsDescription": "Shows all registered hosts along with their assigned tags for easy categorization and filtering. Useful for organizing hosts by environment, purpose, or department.",
    "loadingReport": "Loading report...",
    "noAuditEntries": "No audit log entries found.",
    "noResults": "No reports found matching your search",
    "registeredHostsDescription": "Complete listing of all registered hosts showing basic information and operating system details including hostname, IP addresses, OS version, and status.",
    "reportGenerationError": "Error generating report",
    "reportLoadingError": "Failed to load report",
    "reportNotFound": "Report not found",
    "result": "Result",
    "search": {
      "description": "Description",
      "label": "Search reports",
      "name": "Name",
      "searchBy": "Search by"
    },
    "subtitle": "Generate comprehensive reports for hosts, users, and system analytics",
    "sysmanageUsersDescription": "Comprehensive list of all SysManage users showing their profiles, roles, permissions, and account status. Includes user creation dates and last login times.",
    "system": "System",
    "tabs": {
      "hosts": "Hosts",
      "security": "Security",
      "users": "Users"
    },
    "timestamp": "Timestamp",
    "title": "Reports",
    "totalEntries": "Total Entries",
    "user": "User",
    "viewReport": "View Report",
    "viewReportHtml": "View Report (HTML)"
  },
  "resetPassword": {
    "backToLogin": "Back to Login",
    "confirmPassword": "Confirm New Password",
    "description": "Please enter your new password below.",
    "fillAllFields": "Please fill in all fields",
    "goToLogin": "Go to Login",
    "invalidDescription": "This password reset link is either invalid or has expired. Please request a new password reset.",
    "invalidTitle": "Invalid Reset Link",
    "invalidToken": "This password reset link is invalid or has expired",
    "newPassword": "New Password",
    "noToken": "No reset token provided",
    "passwordMismatch": "Passwords do not match",
    "passwordTooShort": "Password must be at least 8 characters long",
    "redirecting": "Redirecting to login page...",
    "resetButton": "Reset Password",
    "resetError": "An error occurred while resetting your password",
    "resetting": "Resetting Password...",
    "successMessage": "Your password has been successfully reset. You can now log in with your new password.",
    "successTitle": "Password Reset Complete",
    "title": "Reset Your Password",
    "validatingToken": "Validating reset token..."
  },
  "scripts": {
    "addScript": "Add Script",
    "adhocScript": "Ad-hoc Script",
    "cancel": "Cancel",
    "completedAt": "Completed At",
    "content": "Script Content",
    "continueExecution": "Do you want to continue? The script will be queued for execution when the host comes online.",
    "createdAt": "Created",
    "createdBy": "Created By",
    "delete": "Delete Script",
    "deleteError": "Failed to delete script",
    "deleteExecution": "Delete Execution",
    "deleteExecutionError": "Failed to delete execution",
    "deleteExecutionSuccess": "Execution deleted successfully",
    "deleteExecutionsSuccess": "Executions deleted successfully",
    "deleteSelected": "Delete Selected",
    "deleteSelectedExecutions": "Delete Selected Executions",
    "deleteSuccess": "Script deleted successfully",
    "description": "Description",
    "duplicate": "Duplicate",
    "edit": "Edit",
    "errorMessage": "Error Message",
    "errors": {
      "cannotDeleteActiveScript": "Cannot delete script with active executions",
      "failedToCreateScript": "Failed to create saved script",
      "failedToDeleteScript": "Failed to delete saved script",
      "failedToExecuteScript": "Failed to execute script",
      "failedToFetchExecution": "Failed to fetch script execution",
      "failedToFetchExecutions": "Failed to fetch script executions",
      "failedToFetchScripts": "Failed to fetch saved scripts",
      "failedToUpdateScript": "Failed to update saved script",
      "hostNotActive": "Host is not active",
      "hostNotConnected": "Host is not connected - script queued for delivery",
      "hostNotFound": "Host not found",
      "scriptExecutionDisabled": "Script execution is disabled in agent configuration",
      "scriptNotActive": "Script is not active",
      "scriptNotFound": "Script not found",
      "scriptWithNameExists": "A script with this name already exists"
    },
    "executeError": "Failed to execute script",
    "executeNow": "Execute Now",
    "executeScript": "Execute Script",
    "executeSuccess": "Script execution started",
    "executing": "Executing...",
    "executionCompleted": "Script execution completed",
    "executionDetails": "Execution Details",
    "executionFailed": "Script execution failed",
    "executionId": "Execution ID",
    "executionOutput": "Execution Output",
    "executionTime": "Execution Time",
    "exitCode": "Exit Code",
    "hostAppearsOffline": "Warning: The selected host appears to be offline or disconnected.",
    "hostFqdn": "Host",
    "hostId": "Host ID",
    "hostRequired": "Host selection is required",
    "isActive": "Active",
    "loadError": "Failed to load scripts",
    "loading": "Loading...",
    "name": "Name",
    "newScript": "New Script",
    "noExecutionSelected": "No execution selected",
    "noExecutions": "No executions found",
    "noOutput": "No output",
    "noScripts": "No scripts found",
    "platform": "Platform",
    "platforms": {
      "darwin": "macOS",
      "freebsd": "FreeBSD",
      "linux": "Linux",
      "netbsd": "NetBSD",
      "openbsd": "OpenBSD",
      "windows": "Windows"
    },
    "refreshingFrequently": "Refreshing frequently for live results",
    "requestedBy": "Requested By",
    "runAsUser": "Run As User",
    "runScript": "Run Script",
    "save": "Save Script",
    "saveError": "Failed to save script",
    "saveSuccess": "Script saved successfully",
    "savedScript": "Saved Script",
    "savedScripts": "Saved Scripts",
    "saving": "Saving...",
    "scriptContent": "Script Content",
    "scriptContentRequired": "Script content is required",
    "scriptEditor": "Script Editor",
    "scriptExecutions": "Script Executions",
    "scriptLibrary": "Script Library",
    "scriptName": "Script Name",
    "scriptNameRequired": "Script name is required",
    "scriptNameTooLong": "Script name is too long",
    "scriptOrSavedRequired": "Either select a saved script or provide script content",
    "scriptTooLong": "Script content is too long",
    "selectHost": "Select Host",
    "selectScript": "Select Script",
    "selectScriptAndHost": "Select a script and host, then click Execute Now to see output here",
    "selectedScript": "Selected Script",
    "shellType": "Shell Type",
    "shellTypeRequired": "Shell type is required",
    "shells": {
      "bash": "Bash",
      "cmd": "Command Prompt",
      "ksh": "Korn Shell",
      "powershell": "PowerShell",
      "sh": "Shell (sh)",
      "zsh": "Z Shell"
    },
    "startedAt": "Started At",
    "status": {
      "completed": "Completed",
      "failed": "Failed",
      "in_progress": "In Progress",
      "installing": "Installing",
      "pending": "Pending",
      "queued": "Queued",
      "running": "Running",
      "timeout": "Timeout"
    },
    "stderrOutput": "Standard Error",
    "stdoutOutput": "Standard Output",
    "title": "Script Management",
    "unsupportedShellType": "Unsupported shell type",
    "update": "Update Script",
    "updateError": "Failed to update script",
    "updateSuccess": "Script updated successfully",
    "updatedAt": "Updated",
    "validation": {
      "eitherSavedIdOrContent": "Either saved_script_id or script_content must be provided",
      "scriptContentCannotBeEmpty": "Script content cannot be empty",
      "scriptNameCannotBeEmpty": "Script name cannot be empty",
      "scriptNameTooLong": "Script name cannot exceed 255 characters",
      "shellTypeRequired": "shell_type is required for ad-hoc scripts",
      "unsupportedShellType": "Unsupported shell type: {type}"
    },
    "viewScript": "View Script",
    "waitingForResults": "Waiting for results..."
  },
  "search": {
    "search": "Search",
    "searchColumn": "Search in",
    "searchHosts": "Search hosts",
    "searchScripts": "Search scripts",
    "searchTags": "Search tags",
    "searchTerm": "Search",
    "searchUsers": "Search users"
  },
  "secrets": {
    "addSecret": "Add Secret",
    "apiProvider": "API Provider",
    "api_provider": {
      "github": "Github",
      "salesforce": "Salesforce"
    },
    "certificateType": "Certificate Type",
    "certificate_type": {
      "certificate": "Issued Certificate",
      "chain": "Chain Certificate",
      "intermediate": "Intermediate Certificate",
      "key_file": "Key File",
      "root": "Root Certificate"
    },
    "confirmDelete": "Are you sure you want to delete this secret?",
    "confirmDeleteMultiple": "Are you sure you want to delete {count} secrets?",
    "contentHidden": "[Content Hidden for Security]",
    "contentRequired": "Secret content is required",
    "createError": "Failed to create secret",
    "createSuccess": "Secret created successfully",
    "createdAt": "Created At",
    "createdDatetime": "Created Datetime",
    "databaseEngine": "Database Engine",
    "database_engine": {
      "mysql": "mysql",
      "oracle": "Oracle",
      "postgresql": "PostgreSQL",
      "sqlite": "sqlite3",
      "sqlserver": "Microsoft SQL Server"
    },
    "deleteError": "Failed to delete secrets",
    "deleteMultipleSuccess": "Secrets deleted successfully",
    "deleteSelected": "Delete Selected",
    "deleteSuccess": "Secret deleted successfully",
    "editSecret": "Edit Secret",
    "keyType": "Key Type",
    "keyVisibility": "Key Visibility",
    "key_type": {
      "ca": "CA",
      "private": "Private",
      "public": "Public"
    },
    "loadContentError": "Failed to load secret content",
    "loadError": "Failed to load secrets",
    "nameRequired": "Secret name is required",
    "noSecrets": "No secrets found",
    "pasteSecretHint": "Paste your secret content here",
    "replaceExistingSecret": "Replace existing secret",
    "replaceExistingSecretHint": "Enter new secret content to replace the existing secret",
    "savedSecrets": "Saved Secrets",
    "secretContent": "Secret Content",
    "secretFilename": "Filename",
    "secretName": "Secret Name",
    "secretSubtype": "Secret Subtype",
    "secretType": "Secret Type",
    "title": "Secrets",
    "type": {
      "api_keys": "API Keys",
      "database_credentials": "Database Credentials",
      "ssh_key": "SSH Key",
      "ssl_certificate": "SSL Certificate"
    },
    "updateError": "Failed to update secret",
    "updateSuccess": "Secret updated successfully",
    "updatedAt": "Updated At",
    "viewSecret": "View Secret",
    "visibility": {
      "ca": "Certificate Authority",
      "certificate": "Certificate",
      "chain": "Chain",
      "intermediate": "Intermediate",
      "key_file": "Key File",
      "private": "Private",
      "public": "Public",
      "root": "Root"
    }
  },
  "security": {
    "alreadyDeployed": "Antivirus already deployed",
    "alreadyDisabled": "Antivirus already disabled",
    "alreadyEnabled": "Antivirus already enabled",
    "antispyware": "Antispyware",
    "antivirus": "Antivirus",
    "antivirusDisableFailed": "Failed to disable antivirus",
    "antivirusDisableSuccess": "Antivirus disable initiated successfully",
    "antivirusEnableFailed": "Failed to enable antivirus",
    "antivirusEnableSuccess": "Antivirus enable initiated successfully",
    "antivirusError": "Failed to load antivirus status",
    "antivirusOpenSource": "Antivirus - Open Source",
    "antivirusProtection": "Antivirus",
    "antivirusRemoveFailed": "Failed to remove antivirus",
    "antivirusRemoveSuccess": "Antivirus removal initiated successfully",
    "commercialAntivirus": "Antivirus - Commercial",
    "commercialAntivirusError": "Failed to load commercial antivirus status",
    "coreService": "Core Service",
    "daysAgo": "{{days}} days ago",
    "disableAntivirus": "Disable Antivirus",
    "disabled": "Disabled",
    "enableAntivirus": "Enable Antivirus",
    "enabled": "Enabled",
    "firewall": "Firewall",
    "firewallError": "Failed to load firewall status",
    "firewallSoftware": "Firewall Software",
    "installPath": "Installation Path",
    "ipv4OpenPorts": "IPv4 Open Ports",
    "ipv6OpenPorts": "IPv6 Open Ports",
    "lastFullScan": "Last Full Scan",
    "lastQuickScan": "Last Quick Scan",
    "lastUpdated": "Last Updated",
    "never": "Never",
    "noAntivirusDetected": "No antivirus software detected",
    "noCommercialAntivirusDetected": "No commercial antivirus detected",
    "noFirewallDetected": "No firewall detected",
    "noOpenPorts": "No open ports detected",
    "notDeployed": "No antivirus deployed",
    "notProtected": "Not Protected",
    "protected": "Protected",
    "protectionStatus": "Protection Status",
    "realtimeProtection": "Real-time Protection",
    "removeAntivirus": "Remove Antivirus",
    "scanInformation": "Scan Information",
    "signatureInformation": "Signature Information",
    "software": "Software",
    "status": "Status",
    "statusLastUpdated": "Status last updated",
    "tamperProtection": "Tamper Protection",
    "tcpOpenPorts": "TCP Open Ports",
    "today": "Today",
    "udpOpenPorts": "UDP Open Ports",
    "unknown": "Unknown",
    "version": "Version",
    "yesterday": "Yesterday"
  },
  "serverDown": {
    "attempts": "Attempts: {{count}}",
    "details": "Connection Details:",
    "error": "Error",
    "lastConnected": "Last connected: {{time}}",
    "message": "The connection to the server has been interrupted. Attempting to reconnect automatically.",
    "messageFailed": "Unable to connect to the server after multiple attempts. Please contact support or try again later.",
    "nextRetry": "Next retry in:",
    "resetRetries": "Reset Retries",
    "retryNow": "Retry Now",
    "retrying": "Retrying...",
    "secondsRemaining": "{{seconds}}s",
    "timeRemaining": "{{minutes}}m {{seconds}}s",
    "title": "Connection Interrupted",
    "titleFailed": "Server Unavailable"
  },
  "software": {
    "allPackageManagers": "All",
    "architecture": "Architecture",
    "category": "Category",
    "description": "Description",
    "filterBy": "Filter by",
    "installDate": "Install Date",
    "installPath": "Install Path",
    "license": "License",
    "loadingSoftware": "Loading software inventory...",
    "noSoftwareFound": "No software packages found",
    "packageCount": "{count} packages",
    "packageManager": "Package Manager",
    "packageName": "Package Name",
    "refreshSoftware": "Refresh Software Data",
    "showSystemPackages": "Show System Packages",
    "showUserPackages": "Show User Packages",
    "size": "Size",
    "softwareUpdated": "Software Inventory Updated",
    "source": "Source",
    "systemPackage": "System Package",
    "title": "Software Inventory",
    "userInstalled": "User Installed",
    "vendor": "Vendor",
    "version": "Version"
  },
  "tags": {
    "addTag": "Add Tag",
    "description": "Description",
    "editTag": "Edit Tag",
    "hostCount": "Host Count",
    "hostsAssociatedWith": "Hosts associated with",
    "lastUpdated": "Last Updated",
    "name": "Name",
    "noHostsAssociated": "No hosts are associated with this tag.",
    "title": "Tags",
    "viewHosts": "View Hosts"
  },
  "telemetry": {
    "instrumentation": {
      "fastapi": "FastAPI",
      "logging": "Logging",
      "requests": "Requests",
      "sqlalchemy": "SQLAlchemy"
    },
    "opentelemetry": {
      "collectorUrl": "Collector URL",
      "configuration": "Configuration",
      "disabledMessage": "OpenTelemetry instrumentation is currently disabled. Remove OTEL_ENABLED=false or set OTEL_ENABLED=true to enable distributed tracing and metrics collection.",
      "enableHint": "OpenTelemetry is enabled by default. To disable, set OTEL_ENABLED=false environment variable and restart the server.",
      "instrumentation": "Instrumentation",
      "metricsCount": "Metrics",
      "prometheusPort": "Prometheus Port",
      "statistics": "Statistics",
      "status": "Status",
      "title": "OpenTelemetry Status",
      "tracesCount": "Traces"
    },
    "prometheus": {
      "information": "Information",
      "lastScrape": "Last Scrape",
      "manageHint": "Prometheus is managed by the telemetry stack. Use \"make start-telemetry\" to start or \"make stop-telemetry\" to stop.",
      "metricsCount": "Metrics",
      "notRunningMessage": "Prometheus is not running. Start the telemetry stack with \"make start-telemetry\" or \"make start\".",
      "retentionTime": "Retention Time",
      "scrapeInterval": "Scrape Interval",
      "statistics": "Statistics",
      "status": "Status",
      "storageSize": "Storage Size",
      "targets": "Targets",
      "title": "Prometheus Status",
      "url": "URL",
      "version": "Version"
    }
  },
  "thirdPartyRepos": {
    "addError": "Failed to add repository",
    "addRepository": "Add Repository",
    "addSuccess": "Repository added successfully. Package list will be updated shortly.",
    "aliasExample": "Example: my-repo",
    "coprExample": "Example: user/project",
    "coprHelp": "For Fedora/RHEL/CentOS, add COPR repositories or Third-Party YUM/DNF repositories.",
    "coprIdentifier": "COPR Identifier",
    "coprOwner": "COPR Owner",
    "coprOwnerHelp": "e.g., @python",
    "coprProject": "COPR Project",
    "coprProjectHelp": "e.g., python3.11",
    "deleteError": "Failed to delete repositories",
    "deleteSelected": "Delete Selected ({{count}})",
    "deleteSuccess": "Repositories deleted successfully. Package list will be updated shortly.",
    "disableError": "Failed to disable repositories",
    "disableSelected": "Disable Selected ({{count}})",
    "disableSuccess": "Repositories disabled successfully. Package list will be updated shortly.",
    "enableError": "Failed to enable repositories",
    "enableSelected": "Enable Selected ({{count}})",
    "enableSuccess": "Repositories enabled successfully. Package list will be updated shortly.",
    "enabled": "Enabled",
    "invalidPPAFormat": "Invalid PPA format. Use 'ppa:user/ppa-name' format.",
    "loadError": "Failed to load Third-Party repositories",
    "name": "Name",
    "obsDistroVersion": "Distribution Version",
    "obsDistroVersionHelp": "e.g., openSUSE_Tumbleweed",
    "obsHelp": "For openSUSE, add OBS repositories or Third-Party Zypper repositories.",
    "obsProjectPath": "Project Path",
    "obsProjectPathHelp": "e.g., devel:languages:python",
    "obsRepoName": "Repository Name",
    "obsRepoNameHelp": "e.g., python-devel",
    "obsUrl": "Base URL",
    "obsUrlHelp": "Base URL for OBS repositories",
    "ppaExample": "Example: ppa:user/ppa-name",
    "ppaHelp": "For Ubuntu/Debian, add PPAs or Third-Party APT repositories.",
    "ppaIdentifier": "PPA Identifier",
    "ppaName": "PPA Name",
    "ppaNameHelp": "e.g., ppa",
    "ppaOwner": "PPA Owner",
    "ppaOwnerHelp": "e.g., deadsnakes",
    "privilegedModeRequired": "Repository management requires privileged agent mode to be enabled for this host.",
    "repoIdentifierRequired": "Repository identifier is required",
    "repositoryIdentifier": "Repository Identifier",
    "repositoryUrl": "Repository URL",
    "title": "Third-Party Repositories",
    "type": "Type",
    "url": "URL",
    "urlExample": "Example: https://download.opensuse.org/repositories/...",
    "urlRequired": "Repository URL is required"
  },
  "ubuntuPro": {
    "actions": {
      "clearKey": "Clear Key"
    },
    "description": "Configure Ubuntu Pro subscription management and master keys for bulk enrollment.",
    "enrollment": {
      "andMore": "And {{count}} more...",
      "customKey": "Ubuntu Pro Key",
      "customKeyHelp": "Contract-based Ubuntu Pro key starting with \"C\"",
      "enroll": "Enroll Hosts",
      "enrolling": "Enrolling...",
      "keySource": "Enrollment Key Source",
      "noMasterKey": "No master key is configured. Please enter a custom Ubuntu Pro key below.",
      "organization": "Organization: {{name}}",
      "results": "Enrollment Results",
      "resultsNote": "Please check the host details or agent logs for more information about the enrollment process.",
      "selectedHosts": "Selected Hosts",
      "title": "Ubuntu Pro Enrollment",
      "useMasterKey": "Use configured master key"
    },
    "errors": {
      "clearFailed": "Failed to clear master key",
      "enrollmentFailed": "Enrollment failed",
      "loadFailed": "Failed to load Ubuntu Pro settings",
      "saveFailed": "Failed to save Ubuntu Pro settings"
    },
    "fields": {
      "autoAttachEnabled": "Auto-attach Enabled",
      "autoAttachEnabledHelp": "Automatically attach new Ubuntu hosts to Pro using the master key",
      "masterKey": "Ubuntu Pro Master Key",
      "masterKeyHelp": "Contract-based Ubuntu Pro key starting with \"C\". Leave empty to remove.",
      "organizationName": "Organization Name",
      "organizationNameHelp": "Optional organization name for Ubuntu Pro enrollment"
    },
    "messages": {
      "keyCleared": "Master key cleared successfully",
      "saveSuccess": "Ubuntu Pro settings saved successfully"
    },
    "settings": {
      "description": "Configure a master Ubuntu Pro key for bulk enrollment of hosts. This key will be pre-filled in enrollment dialogs.",
      "title": "Ubuntu Pro Settings"
    },
    "status": {
      "autoAttachEnabled": "Auto-attach enabled",
      "keyConfigured": "Master key configured"
    },
    "title": "Ubuntu Pro",
    "validation": {
      "invalidKey": "Ubuntu Pro key must start with \"C\" and be at least 24 characters long"
    }
  },
  "ui_testing": {
    "bestPractices": {
      "codeReview": "Test Code Review",
      "debugging": "Debugging Strategies",
      "documentation": "Test Documentation",
      "maintainability": "Test Maintainability",
      "performance": "Test Performance",
      "reliability": "Test Reliability",
      "title": "Testing Best Practices"
    },
    "cicd": {
      "description": "Continuous integration and deployment testing workflows",
      "features": {
        "artifactStorage": "Test Artifact Storage",
        "environmentManagement": "Environment Management",
        "notificationIntegration": "Notification Integration",
        "parallelJobs": "Parallel Job Execution",
        "testReports": "Test Report Generation"
      },
      "platforms": {
        "azure": "Azure DevOps",
        "circleci": "CircleCI",
        "githubActions": "GitHub Actions",
        "gitlab": "GitLab CI",
        "jenkins": "Jenkins",
        "travis": "Travis CI"
      },
      "title": "CI/CD Integration"
    },
    "configuration": {
      "configFiles": "Configuration Files",
      "environment": "Environment Setup",
      "pageObjects": "Page Object Pattern",
      "reporting": "Test Reporting",
      "testData": "Test Data Management",
      "title": "Test Configuration",
      "utilities": "Test Utilities"
    },
    "makefile": {
      "commands": {
        "test": "make test",
        "testAccessibility": "make test-a11y",
        "testCoverage": "make test-coverage",
        "testE2e": "make test-e2e",
        "testVisual": "make test-visual",
        "testWatch": "make test-watch"
      },
      "description": "Common testing commands available through Makefile",
      "title": "Makefile Commands"
    },
    "overview": {
      "automation": "Automation & CI/CD",
      "description": "Comprehensive UI testing setup using modern cross-platform testing frameworks",
      "frameworks": "Testing Frameworks",
      "platforms": "Cross-Platform Support",
      "title": "Testing Framework Overview"
    },
    "playwright": {
      "browsers": {
        "chromium": "Chromium",
        "edge": "Microsoft Edge",
        "firefox": "Firefox",
        "safari": "Safari",
        "webkit": "WebKit"
      },
      "commands": {
        "codegen": "Code Generation",
        "debug": "Debug Tests",
        "install": "Install Playwright",
        "report": "Test Report",
        "test": "Run Tests",
        "trace": "View Trace"
      },
      "description": "Modern cross-platform testing framework with reliable auto-wait capabilities",
      "features": {
        "autoWait": "Auto-wait for Elements",
        "crossBrowser": "Cross-Browser Testing",
        "parallel": "Parallel Execution",
        "screenshots": "Screenshot Testing",
        "tracing": "Test Tracing",
        "video": "Video Recording"
      },
      "title": "Playwright Testing"
    },
    "selenium": {
      "description": "Industry-standard WebDriver automation for legacy browser support",
      "drivers": {
        "chrome": "ChromeDriver",
        "edge": "EdgeDriver",
        "firefox": "GeckoDriver",
        "ie": "IEDriver",
        "safari": "SafariDriver"
      },
      "features": {
        "crossPlatform": "Cross-Platform Testing",
        "gridSupport": "Selenium Grid Support",
        "mobileTesting": "Mobile Testing",
        "multiLanguage": "Multi-Language Support",
        "remoteExecution": "Remote Execution",
        "webdriver": "WebDriver Protocol"
      },
      "title": "Selenium Testing"
    },
    "testTypes": {
      "accessibility": "Accessibility Tests",
      "api": "API Tests",
      "e2e": "End-to-End Tests",
      "integration": "Integration Tests",
      "mobile": "Mobile Tests",
      "performance": "Performance Tests",
      "title": "Test Types",
      "unit": "Unit Tests",
      "visual": "Visual Regression Tests"
    },
    "title": "UI Testing Documentation",
    "tools": {
      "accessibilityTools": "Accessibility Testing Tools",
      "assertionLibraries": "Assertion Libraries",
      "dataGenerators": "Test Data Generators",
      "mockingFrameworks": "Mocking Frameworks",
      "testRunners": "Test Runners",
      "title": "Testing Tools & Utilities",
      "visualTools": "Visual Testing Tools"
    }
  },
  "updates": {
    "autoRefreshIn": "Auto-refresh in",
    "clearSearch": "Clear search",
    "executeError": "Failed to execute updates",
    "executeSelected": "Execute Selected Updates",
    "executeSuccess": "Update execution started for selected packages",
    "filters": {
      "allHosts": "All Affected Hosts",
      "allManagers": "All Package Managers",
      "securityOnly": "Security Updates Only",
      "systemOnly": "System Updates Only",
      "updates": "updates"
    },
    "loading": "Loading updates...",
    "next": "Next",
    "noMatchingUpdates": "No updates match the current filters",
    "noUpdates": "All systems are up to date",
    "pageInfo": "Page {{current}} of {{total}}",
    "previous": "Previous",
    "refresh": "Refresh",
    "requiresReboot": "Requires reboot",
    "searchPlaceholder": "Search for package updates...",
    "selectAll": "Select All",
    "stats": {
      "hosts": "Affected Hosts",
      "security": "Security Updates",
      "system": "System Updates",
      "total": "Total Updates"
    },
    "status": {
      "failed": "Update Failed",
      "pending": "Update Requested",
      "success": "Successfully Updated"
    },
    "title": "Package Updates",
    "types": {
      "application": "Application",
      "security": "Security",
      "system": "System"
    },
    "unknown": "Unknown"
  },
  "userDetail": {
    "confirmResetMessage": "Are you sure you want to send a password reset email to {{email}}? This will allow the user to set a new password.",
    "confirmResetTitle": "Confirm Password Reset",
    "passwordResetError": "Failed to send password reset email. Please try again.",
    "passwordResetSuccess": "Password reset email has been sent to {{email}}",
    "resetPassword": "Reset Password",
    "resettingPassword": "Sending Reset Email...",
    "sendResetEmail": "Send Reset Email"
  },
  "userProfile": {
    "accountInfo": "Account Information",
    "accountStatus": "Account Status",
    "active": "Active",
    "cancel": "Cancel",
    "changeEmail": "Change Email Address",
    "changeEmailButton": "Change Email",
    "changePassword": "Change Password",
    "changePasswordButton": "Change Password",
    "changingEmail": "Changing Email...",
    "changingPassword": "Changing Password...",
    "confirmEmail": "Confirm New Email Address",
    "confirmEmailHelp": "Re-enter your new email address",
    "confirmEmailPlaceholder": "Confirm your new email address",
    "confirmPassword": "Confirm New Password",
    "confirmPasswordHelp": "Re-enter your new password",
    "confirmPasswordPlaceholder": "Confirm your new password",
    "currentEmail": "Current Email",
    "currentEmailHelp": "This is your current email address",
    "currentPassword": "Current Password",
    "currentPasswordPlaceholder": "Enter your current password",
    "deleteImage": "Delete",
    "email": "Email",
    "emailChangeError": "Failed to change email. Please try again.",
    "emailChangeSuccess": "Email change request submitted. Please check your new email for verification.",
    "emailFieldsRequired": "All fields are required",
    "emailMismatch": "Email addresses do not match",
    "firstName": "First Name",
    "firstNamePlaceholder": "Enter your first name",
    "inactive": "Inactive",
    "invalidEmail": "Please enter a valid email address",
    "invalidEmailFormat": "Please enter a valid email address",
    "lastName": "Last Name",
    "lastNamePlaceholder": "Enter your last name",
    "loadError": "Failed to load profile data",
    "newEmail": "New Email Address",
    "newEmailHelp": "Enter a valid email address",
    "newEmailPlaceholder": "Enter your new email address",
    "newPassword": "New Password",
    "newPasswordPlaceholder": "Enter your new password",
    "passwordChangeError": "Failed to change password. Please check your current password.",
    "passwordChangeSuccess": "Password changed successfully",
    "passwordContainsUsername": "Password cannot contain your username or email",
    "passwordFieldsRequired": "All fields are required",
    "passwordForEmail": "Current Password",
    "passwordForEmailHelp": "Required to verify your identity",
    "passwordForEmailPlaceholder": "Enter your current password to confirm",
    "passwordMismatch": "New password and confirmation do not match",
    "passwordNeedsCharTypes": "Password must contain at least 3 different character types",
    "passwordNeedsLowercase": "Password must contain at least one lowercase letter",
    "passwordNeedsNumber": "Password must contain at least one number",
    "passwordNeedsSpecial": "Password must contain at least one special character",
    "passwordNeedsUppercase": "Password must contain at least one uppercase letter",
    "passwordRequirements": "Password must be at least 8 characters long",
    "passwordTooLong": "Password must be no more than 128 characters long",
    "passwordTooShort": "New password must be at least 8 characters long",
    "personalInfo": "Personal Information",
    "profile": "Profile",
    "profilePlaceholder": "Profile editor coming soon...",
    "save": "Save Changes",
    "saveError": "Failed to save profile changes",
    "saveSuccess": "Profile updated successfully",
    "saving": "Saving...",
    "securityInfo": "Security Information",
    "unknownUser": "Unknown User",
    "uploadImage": "Upload Image",
    "userMenu": "User menu"
  },
  "users": {
    "actions": "Actions",
    "addUser": "Add User",
    "editInfo": "Edit the user's information below.",
    "editUser": "Edit User",
    "email": "Email",
    "emailNotification": "An email will be sent to the user with a secure link to set their initial password.",
    "emailUnique": "Email address must be unique",
    "enterInfo": "Enter the new user's information below.",
    "firstName": "First Name",
    "lastName": "Last Name",
    "lock": "Lock",
    "lockSelected": "Lock Selected Users",
    "locked": "Locked",
    "newPassword": "Enter new password",
    "role": "Role",
    "status": "Status",
    "title": "User Management",
    "unlock": "Unlock",
    "unlockSelected": "Unlock Selected Users",
    "unlocked": "Unlocked",
    "username": "Username"
  }
}