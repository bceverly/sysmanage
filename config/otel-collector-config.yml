# OpenTelemetry Collector configuration for SysManage
# Receives telemetry data from applications and exports to various backends

receivers:
  # OTLP receiver for traces, metrics, and logs
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver to scrape metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Batch processor to batch telemetry data
  batch:
    timeout: 10s
    send_batch_size: 1024

  # Memory limiter to prevent out of memory issues
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

  # Resource processor to add/modify resource attributes
  resource:
    attributes:
      - key: service.namespace
        value: sysmanage
        action: insert
      - key: deployment.environment
        value: development
        action: insert

  # Attributes processor to modify span/metric attributes
  attributes:
    actions:
      - key: environment
        value: development
        action: insert

exporters:
  # Logging exporter for debugging
  logging:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

  # OTLP exporter (for sending to other collectors or backends)
  otlp:
    endpoint: localhost:4317
    tls:
      insecure: true

  # Prometheus exporter for metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: sysmanage
    const_labels:
      service: sysmanage-backend

  # File exporter for traces (debugging)
  file:
    path: /tmp/otel-traces.json
    rotation:
      max_megabytes: 100
      max_days: 3
      max_backups: 3

  # Prometheus Remote Write (optional, for production Prometheus)
  # prometheusremotewrite:
  #   endpoint: "http://prometheus:9090/api/v1/write"
  #   tls:
  #     insecure: true

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133

  # Pprof extension for profiling
  pprof:
    endpoint: 0.0.0.0:1777

  # zPages extension for debugging
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]

  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [logging, file]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, resource, batch]
      exporters: [logging, prometheus]

    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [logging]

  telemetry:
    logs:
      level: info
    metrics:
      level: detailed
      address: 0.0.0.0:8888